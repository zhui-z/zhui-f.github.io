{"pages":[],"posts":[{"title":"centos 安装tomcat","text":"1、linux账户与权限在linux中为了安全分配有多个账户，多个账户的权限从大到小。如何管理：对特定的用户需要特定的目录权限，对于 FTP,Apache默认shell进行限制 /bin/false /bin/false 什么也不做只是返回一个错误状态，然后立即退出。将用户的 shell 设置为 /bin/false，用户会无法登录，并且不会有任何提示。 /sbin/nologin nologin 会礼貌的向用户显示一条信息，并拒绝用户登录： This account is currently not available. 有一些软件，比如一些 ftp 服务器软件，对于本地非虚拟账户，只有用户有有效的 shell 才能使用 ftp 服务。这时候就可以使用 nologin 使用户即不能登录系统，还能使用一些系统服务，比如 ftp 服务。/bin/false 则不行，这是二者的重要区别之一。 2、chmod,chgrp,chown chmod 用于修改文件权限 u 表示该文件的拥有者，g 表示与该文件的拥有者属于同一个群体(group)者，o 表示其他以外的人，a 表示这三者皆是。 + 表示增加权限、- 表示取消权限、= 表示唯一设定权限。 r 表示可读取，w 表示可写入，x 表示可执行，X 表示只有当该文件是个子目录或者该文件已经被设定过为可执行。 -R : 对目前目录下的所有文件与子目录进行相同的权限变更(即以递回的方式逐个变更) chgrp Linux chgrp命令用于变更文件或目录的所属群组。 -c或–changes 效果类似”-v”参数，但仅回报更改的部分。 -f或–quiet或–silent 不显示错误信息。 -h或–no-dereference 只对符号连接的文件作修改，而不更动其他任何相关文件。 -R或–recursive 递归处理，将指定目录下的所有文件及子目录一并处理。 -v或–verbose 显示指令执行过程。 –help 在线帮助。 –reference=&lt;参考文件或目录&gt; 把指定文件或目录的所属群组全部设成和参考文件或目录的所属群组相同。 –version 显示版本信息。 chown 利用 chown 将指定文件的拥有者改为指定的用户或组，用户可以是用户名或者用户ID；组可以是组名或者组ID； -R : 处理指定目录以及其子目录下的所有文件 3、修改文件数字 字母 3、git和tomcat安装Git yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel perl-deve yum install git 创建一个git用户组和用户，用来运行git服务：groupadd git useradd git -g git passwd git 初始化Git仓库 cd /home mkdir gitrepo chown git:git gitrepo/ cd gitrepo git init –bare runoob.git 以上命令Git创建一个空仓库，服务器上的Git仓库通常都以.git结尾。然后，把仓库所属用户改为git： chown -R git:git runoob.git 克隆仓库 tomcat下载","link":"/2020/08/05/git%E5%92%8Ctomcat/"},{"title":"linux安装软件与包管理","text":"yum安装jdk搜索jdk软件包列表 1yum search java | grep -i --color jdk 选择版本安装 1yum install -y java-1.8.0-openjdk java-1.8.0-openjdk-devel 下载完成安装成功 源码安装mysql 去管网下载安装包下载完成 yum安装编译所需要的工具和库。&lt;br /&gt;1yum install -y cmake make gcc gcc-c++ wget ncurses-devel cmake make perl ncurses-devel openssl-devel bison-devel libaio libaio 创建MySQL安装目录1234# 如MySQL安装目录为：/usr/local/mysqlmkdir -p /usr/local/web/mysql#创建数据目录为：mkdir /home/mysql/data 创建mysql用户和用户组和安装目录1234# 创建用户组groupadd mysql# 创建mysql用户，所属组为mysqluseradd -s /bin/bash -m -g mysql mysql 12345678mkdir -p /home/mysql/data/bin_logmkdir -p /home/mysql/data/db_filemkdir -p /home/mysql/data/innodb_logmkdir -p /home/mysql/data/innodb_tsmkdir -p /home/mysql/data/logmkdir -p /home/mysql/data/relay_logmkdir -p /home/mysql/data/tmpdirmkdir -p /home/mysql/data/undo_log 更改目录权限 12chown -R mysql:mysql /home/mysql/data/chown -R mysql:mysql /usr/local/web/mysql/ 解压 12tar -zxvf mysql-5.6.40.tar.gz 编译安装cmake编译工具。(先执行./configure检查配置，再执行make编译，最后执行make install 安装)编译安装mysql软件包。(先执行 cmake . -DCMAKE_INSTALL_PREFIX=/usr/local/mysql -DMYSQL_DATADIR=/data/mysql -DSYSCONFDIR=/etc 再执行 make 最后执行 make install ) 把mysql服务添加系统环境变量。弄了半天，忘了截图弄，卡了很久https://blog.51cto.com/rabbit2013/1341055https://blog.csdn.net/vv19910825/article/details/82979563终于进来了设置下密码登录成功 yum 安装mysql下载并安装MySQL官方的 Yum Repository版本5.7 1[root@localhost ~]# wget -i -c http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm 使用命令安装 1yum -y install mysql57-community-release-el7-10.noarch.rpm 安装mysql 1yum -y install mysql-community-server 历经一个小时终于下完了启动mysql 1systemctl start mysqld.service 设置开机启动systemctl enable mysqld.service此时MySQL已经开始正常运行，不过要想进入MySQL还得先找出此时root用户的密码，通过如下命令可以在日志文件中找出密码： 1grep \"password\" /var/log/mysqld.log 登录成功 源码安装、rpm、yum 1、源码安装 源码安装优点1、文档齐全2、因为可以定位到代码，所以debug方便3、本机兼容性最好（由于是本机编译的，只要编译通过，就没有各种库的依赖的问题） 源码安装的缺点1、编译麻烦2、缺乏自动依赖管理，软件升级麻烦3、操作过程繁琐使用make编译 2、RPM包安装对于一个rpm包来说，都是有”-“和”.”构成的，基本上有以下几部分组成：* 包名 *版本信息 * 发布版本号 * 运行平台，当出现noarch,代表的是软件可以平台兼容 安装rpm -i 需要安装的包文件rpm -iv 需要安装的包文件(显示安装详情)rpm -ivh 需要安装的包文件(显示安装详情及进度) 升级rpm -U 需要升级的包文件rpm -Uvh 需要升级的包文件(显示升级详情及进度) 卸载rpm -e 需要卸载的软件包注：如果其他程序依赖要卸载的包,系统会提示不能删除,若需要强行删除加上–nodeps,会强制删除,但可能导致依赖于它的软件不能运行。 查看已安装rpm -qa 查看指定包rpm -qa | grep “软件或者包的名字” yum 安装流程1、安装: yum install 软件2、升级: yum update 软件3、删除: yum remove 软件4、查看: yum info 软件5、搜索软件: yum search 软件6、查看依赖关系: yum deplist 软件7、查看已安装软件: yum list installded","link":"/2020/08/12/linux%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6%E4%B8%8E%E5%8C%85%E7%AE%A1%E7%90%86/"},{"title":"markdown语法","text":"一级标题二级标题三级标题四级标题五级标题六级标题‘’’ 123456# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题 段落在markdown中段落换行使用两个以上空格加上回车 hello hello 12hello 字体斜体文本斜体文本粗体文本粗体文本粗斜体文本粗斜体文本 ​ 123456*斜体文本*_斜体文本_**粗体文本**__粗体文本__***粗斜体文本***___粗斜体文本___ 分割线 123456789**** * ******- - ----------- Markdown 列表Markdown 支持有序列表和无序列表。 无序列表使用星号(***)、加号(+)或是减号(-**)作为列表标记，这些标记后面要添加一个空格，然后再填写内容： 123456789101112* 第一项* 第二项* 第三项+ 第一项+ 第二项+ 第三项- 第一项- 第二项- 第三项 第一项 第一项 第一项 1、第一项： 第一项 第二项 区块123&gt; 最外层&gt; &gt; 第一层嵌套&gt; &gt; &gt; 第二层嵌套 最外层 第一层嵌套 第二层嵌套 **```**用来包裹代码 链接12345[链接名称](链接地址)或者&lt;链接地址&gt; 链接地址 https://www.baidu.com 图片 1![图片](https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1596774964934&amp;di=4fad6a09766e3bd17b9d64e412bb9393&amp;imgtype=0&amp;src=http%3A%2F%2Fa3.att.hudong.com%2F14%2F75%2F01300000164186121366756803686.jpg) 我们可以设置表格的对齐方式： -: 设置内容和标题栏居右对齐。 :- 设置内容和标题栏居左对齐。 :-: 设置内容和标题栏居中对齐。 实例如下： 1234| 左对齐 | 右对齐 | 居中对齐 || :-----| ----: | :----: || 单元格 | 单元格 | 单元格 || 单元格 | 单元格 | 单元格 | 左对齐 右对齐 居中对齐 单元格 单元格 单元格 单元格 单元格 单元格","link":"/2020/08/07/markdown%E8%AF%AD%E6%B3%95/"}],"tags":[{"name":"linux","slug":"linux","link":"/tags/linux/"},{"name":"其他","slug":"其他","link":"/tags/%E5%85%B6%E4%BB%96/"}],"categories":[]}